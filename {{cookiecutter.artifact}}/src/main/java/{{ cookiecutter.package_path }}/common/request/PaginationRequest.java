// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// And git commit hash is {% gitcommit %}.

package {{ cookiecutter.basePackage }}.common.request;

import com.fasterxml.jackson.annotation.JsonFormat;
import org.hibernate.validator.constraints.Length;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import lombok.Data;
import lombok.EqualsAndHashCode;
import org.apache.commons.lang3.StringUtils;
import org.springframework.format.annotation.DateTimeFormat;

import java.time.LocalDateTime;

/**
 * 带分页/排序/时间范围/模糊搜索/文件导出的分页请求对象，所有分页请求对象都应该继承此类
 */
@Data
@EqualsAndHashCode(callSuper = true)
public class PaginationRequest extends BaseRequest {

    private static final String DEFAULT_ORDER = "asc";
    private static final String DEFAULT_FIELD = "id";
    private static final int DEFAULT_PAGE_NUM = 1;
    private static final int DEFAULT_PAGE_SIZE = 10;
    private static final int MAX_PAGE_SIZE = 100;

    /**
     * 分页页码
     *
     * @mock 1
     */
    private Integer pageNum;

    /**
     * 分页页码，兼容pageNum
     *
     * @mock 1
     */
    private Integer current;

    /**
     * 分页大小
     *
     * @mock 10
     */
    private Integer pageSize;

    /**
     * 是否导出当前页
     *
     * @mock false
     */
    private boolean export;

    /**
     * 排序方式 asc/desc
     *
     * @mock asc
     */
    private String order;

    /**
     * 排序字段
     *
     * @mock id
     */
    private String field;

    /**
     * 开始时间 yyyy-MM-dd HH:mm:ss
     *
     * @mock 2021-01-01 00:00:00
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime startTime;

    /**
     * 结束时间 yyyy-MM-dd HH:mm:ss
     *
     * @mock 2021-02-01 00:00:00
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime endTime;

    /**
     * 搜索关键字(支持模糊查询)
     * 较长的关键词可能会影响查询性能
     *
     * @mock 123
     */
    @Length(max = 64, message = "搜索关键字长度不能超过64")
    private String keyword;


    /**
     * 是否正序排序
     */
    public boolean isAsc() {
        return StringUtils.isNotBlank(order) && order.equalsIgnoreCase(DEFAULT_ORDER);
    }

    /**
     * 是否倒序排序
     */
    public boolean isDesc() {
        return StringUtils.isNotBlank(order) && !order.equalsIgnoreCase(DEFAULT_ORDER);
    }

    public String getField() {
        return StringUtils.isNotBlank(field) ? field : DEFAULT_FIELD;
    }

    /**
     * 获取合法页码
     */
    public Integer getPageNum() {
        Integer num = (current == null) ? pageNum : current;
        return (num == null || num < 1 || num >= Integer.MAX_VALUE) ? DEFAULT_PAGE_NUM : num;
    }

    /**
     * 获取合法分页大小
     */
    public Integer getPageSize() {
        return (pageSize == null || pageSize < 1 || pageSize > MAX_PAGE_SIZE) ?
                DEFAULT_PAGE_SIZE : pageSize;
    }

    /**
     * 获取分页偏移量
     */
    public Integer getOffset() {
        return (getPageNum() - 1) * getPageSize();
    }

    /**
     * 获取mybatis plus分页对象
     */
    public <T> Page<T> toPageable() {
        return new Page<>(getPageNum(), getPageSize());
    }

}
