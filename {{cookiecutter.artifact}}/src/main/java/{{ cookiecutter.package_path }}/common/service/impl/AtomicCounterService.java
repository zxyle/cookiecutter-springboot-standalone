// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// And git commit hash is {% gitcommit %}.

package {{ cookiecutter.basePackage }}.common.service.impl;

import {{ cookiecutter.basePackage }}.common.service.CounterService;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicLong;


/**
 * 原子计数器
 */
@Service
public class AtomicCounterService implements CounterService {

    private static final String FORMAT = "%s:%s";

    private static final Map<String, AtomicLong> counterMap = new ConcurrentHashMap<>();

    @Override
    public Long incr(String biz, String id) {
        String key = String.format(FORMAT, biz, id);
        counterMap.putIfAbsent(key, new AtomicLong(0));
        return counterMap.get(key).incrementAndGet();
    }

    @Override
    public Long get(String biz, String id) {
        String key = String.format(FORMAT, biz, id);
        if (counterMap.containsKey(key)) {
            return counterMap.get(key).get();
        }
        return 0L;
    }

    @Override
    public boolean clear(String biz, String id) {
        String key = String.format(FORMAT, biz, id);
        counterMap.remove(key);
        return true;
    }
}
