// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.common.service.impl;

import {{ cookiecutter.basePackage }}.common.service.CounterService;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Map统计服务实现类
 */
@Service
public class MapCounterServiceImpl implements CounterService {

    private static final Map<String, Long> counterMap = new ConcurrentHashMap<>();

    /**
     * 自增并获取统计次数
     *
     * @param biz 业务名
     * @param id  ID
     */
    @Override
    public Long incr(String biz, String id) {
        String key = String.format("%s:%s", biz, id);
        counterMap.put(key, counterMap.getOrDefault(key, 0L) + 1);
        return counterMap.get(key);
    }

    /**
     * 获取统计次数
     *
     * @param biz 业务名
     * @param id  ID
     */
    @Override
    public Long get(String biz, String id) {
        String key = String.format("%s:%s", biz, id);
        return counterMap.getOrDefault(key, 0L);
    }

    /**
     * 清除统计次数
     *
     * @param biz 业务名
     * @param id  ID
     */
    @Override
    public boolean clear(String biz, String id) {
        String key = String.format("%s:%s", biz, id);
        counterMap.remove(key);
        return true;
    }
}
