// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.common.util;

import lombok.Data;
import org.slf4j.MDC;

/**
 * 通用返回对象
 * 弃用：无法通过smart-doc生成接口文档
 */
@Data
public class R {

    /**
     * 消息
     *
     * @mock 操作成功
     */
    private String message;

    /**
     * 是否成功
     *
     * @mock true
     */
    private boolean success;

    /**
     * 请求追踪ID
     *
     * @mock 6dc01bc62c0d44018360af107673d71e
     */
    private String traceId;

    /**
     * 状态码
     *
     * @mock 200
     */
    private int code;

    /**
     * 响应数据
     */
    private Object data;

    public R() {
        setTraceId(MDC.get("traceId"));
        setCode(200);
        setMessage("操作成功");
        setSuccess(true);
    }

    public static R ok() {
        return new R();
    }

    public static R ok(Object data) {
        R r = new R();
        r.setData(data);
        return r;
    }

    public static R ok(String message) {
        R r = new R();
        r.setMessage(message);
        return r;
    }

    public static R fail() {
        return R.fail("操作失败");
    }

    public static R fail(String message) {
        R r = new R();
        r.setCode(500);
        r.setSuccess(false);
        r.setMessage(message);
        return r;
    }

    public static R result(boolean success) {
        return success? ok(): fail();
    }

}
