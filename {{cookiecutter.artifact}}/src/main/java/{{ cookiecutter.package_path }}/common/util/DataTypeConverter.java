// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.common.util;


public class DataTypeConverter {

    public static <T> T convert(Object input, String outputTypeName) throws IllegalArgumentException {
        if (input == null) {
            return null;
        }

        if (outputTypeName == null) {
            throw new IllegalArgumentException("Output type name cannot be null.");
        }

        Class<?> outputType;
        try {
            outputType = Class.forName(outputTypeName);
        } catch (ClassNotFoundException e) {
            throw new IllegalArgumentException("Unsupported output type: " + outputTypeName, e);
        }

        String inputString = input.toString().trim();

        if (outputType == String.class) {
            return (T) inputString;
        } else if (outputType == Boolean.class || outputType == boolean.class) {
            return(T)Boolean.valueOf(inputString);
        } else if (outputType == Integer.class || outputType == int.class) {
            return (T) outputType.cast(Integer.valueOf(inputString));
        } else if (outputType == Double.class || outputType == double.class) {
            return (T) outputType.cast(Double.valueOf(inputString));
        } else if (outputType == Float.class || outputType == float.class) {
            return (T) outputType.cast(Float.valueOf(inputString));
        } else if (outputType == Long.class || outputType == long.class) {
            return (T) outputType.cast(Long.valueOf(inputString));
        } else if (outputType == Short.class || outputType == short.class) {
            return (T) outputType.cast(Short.valueOf(inputString));
        } else if (outputType == Byte.class || outputType == byte.class) {
            return (T) outputType.cast(Byte.valueOf(inputString));
        } else {
            throw new IllegalArgumentException("Unsupported output type: " + outputType.getName());
        }
    }

    public static void main(String[] args) {
        String intValue = DataTypeConverter.convert("aaa", "java.lang.String");
        int intValue2 = DataTypeConverter.convert("111", "java.lang.Integer");
        System.out.println(intValue);
        System.out.println(intValue2);
        System.out.println(intValue2+100);

    }

}

