// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.format.FormatterRegistry;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import java.util.List;

@Configuration
public class MvcConfigurer implements WebMvcConfigurer {

    // 跨域访问
    // TODO 补充对应示例
    @Override
    public void addCorsMappings(CorsRegistry registry) {
        // 允许来自http://domain.com 的/api 的请求
        registry.addMapping("/api/**")
                .allowedOrigins("http://domain.com")
                .allowedMethods("POST", "GET");

    }

    // 格式化
    // TODO 补充对应示例
    @Override
    public void addFormatters(FormatterRegistry registry) {

    }

    // URI 到视图的映射
    // TODO 补充对应示例
    @Override
    public void addViewControllers(ViewControllerRegistry registry) {

    }

    // 其他更多全局定制接口
    // TODO 补充对应示例


    /**
     * 配置静态资源
     * addResourceHandler   对外暴露的访问路径
     * addResourceLocations 静态资源存放的位置
     *
     * @param registry
     */
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/js/**").addResourceLocations("/js/");

    }


    @Override
    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> resolvers) {

    }
}