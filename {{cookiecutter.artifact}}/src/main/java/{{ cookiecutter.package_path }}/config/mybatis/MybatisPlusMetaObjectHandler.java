// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// And git commit hash is {% gitcommit %}.

package {{ cookiecutter.basePackage }}.config.mybatis;

import cn.hutool.core.util.StrUtil;
import {{ cookiecutter.basePackage }}.common.constant.ProjectConst;
import com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;
import {{ cookiecutter.basePackage }}.config.security.LoginUser;
import org.apache.ibatis.reflection.MetaObject;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;

import java.time.LocalDateTime;

/**
 * MybatisPlus自动填充
 * 用于自动填充创建时间、更新时间、创建人(如果字段存在)、更新人(如果字段存在)
 */
@Component
public class MybatisPlusMetaObjectHandler implements MetaObjectHandler {

    private static final String CREATE_FIELD = StrUtil.toCamelCase(ProjectConst.CREATE_FIELD);
    private static final String UPDATE_FIELD = StrUtil.toCamelCase(ProjectConst.UPDATE_FIELD);

    // mybatis plus 插入时填充策略
    @Override
    public void insertFill(MetaObject metaObject) {
        this.setFieldValByName(CREATE_FIELD, LocalDateTime.now(), metaObject);
        this.setFieldValByName(UPDATE_FIELD, LocalDateTime.now(), metaObject);
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        if (authentication != null) {
            LoginUser loginUser = (LoginUser) authentication.getPrincipal();
            this.setFieldValByName("createBy", loginUser.getUser().getId(), metaObject);
            this.setFieldValByName("updateBy", loginUser.getUser().getId(), metaObject);
        }
    }

    // mybatis plus 更新时填充策略
    @Override
    public void updateFill(MetaObject metaObject) {
        this.setFieldValByName(UPDATE_FIELD, LocalDateTime.now(), metaObject);
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        if (authentication != null) {
            LoginUser loginUser = (LoginUser) authentication.getPrincipal();
            this.setFieldValByName("updateBy", loginUser.getUser().getId(), metaObject);
        }
    }
}
