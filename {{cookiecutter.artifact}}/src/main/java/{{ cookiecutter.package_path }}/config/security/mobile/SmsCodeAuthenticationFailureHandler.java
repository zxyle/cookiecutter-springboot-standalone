// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.config.security.mobile;

import {{ cookiecutter.basePackage }}.biz.sys.log.LoginLog;
import {{ cookiecutter.basePackage }}.biz.sys.log.LoginLogService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.AuthenticationFailureHandler;
import org.springframework.stereotype.Component;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

/**
 * 验证码登录失败处理
 */
@Slf4j
@Component
@RequiredArgsConstructor
public class SmsCodeAuthenticationFailureHandler implements AuthenticationFailureHandler {

    final LoginLogService loginLogService;

    @Override
    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException {
        // 登录失败后，记录登录日志
        recordLog(request, exception);

        response.setContentType("application/json;charset=UTF-8");
        response.getWriter().write("{\"message\": \"登录失败\", \"success\": false, \"code\": \"401\"}");
    }

    private void recordLog(HttpServletRequest request, AuthenticationException exception) {
        String account = (String) request.getAttribute("account");
        LoginLog loginLog = new LoginLog();
        loginLog.setIp(request.getRemoteAddr());
        loginLog.setUa(request.getHeader("User-Agent"));
        loginLog.setSuccess(false);
        loginLog.setAccount(account);
        loginLog.setMsg(exception.getMessage());
        loginLogService.saveLoginLog(loginLog);
    }
}
