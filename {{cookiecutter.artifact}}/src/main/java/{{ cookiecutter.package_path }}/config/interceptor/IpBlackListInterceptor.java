// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.config.interceptor;

import {{ cookiecutter.basePackage }}.common.util.CidrUtil;
import {{ cookiecutter.basePackage }}.biz.sys.service.IBlacklistService;
import {{ cookiecutter.basePackage }}.biz.sys.service.IWhitelistService;
import {{ cookiecutter.basePackage }}.common.util.ResponseUtil;
import org.springframework.stereotype.Service;
import org.springframework.web.servlet.HandlerInterceptor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

@Service
public class IpBlackListInterceptor implements HandlerInterceptor {

    public static final boolean blackEnable = true;
    public static final boolean whiteEnable = true;

    IBlacklistService blacklistService;

    IWhitelistService whitelistService;

    public IpBlackListInterceptor(IBlacklistService blacklistService, IWhitelistService whitelistService) {
        this.blacklistService = blacklistService;
        this.whitelistService = whitelistService;
    }

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
        String ip = request.getRemoteAddr();
        List<String> blacklist = blacklistService.getBlacklist();
        List<String> whitelist = whitelistService.getWhitelist();
        if ((blackEnable && CidrUtil.in(ip, blacklist)) ||
                (whiteEnable && CidrUtil.notIn(ip, whitelist))) {

            ResponseUtil.forbidden(response);
            return false;
        }
        return true;
    }
}
