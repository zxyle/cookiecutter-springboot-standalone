// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// And git commit hash is {% gitcommit %}.

package {{ cookiecutter.basePackage }}.biz.site.star;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.stereotype.Service;

import java.time.Instant;
import java.util.Collections;
import java.util.List;

/**
 * 使用Redis实现 收藏业务
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class RedisStarServiceImpl implements StarService {

    final StringRedisTemplate stringRedisTemplate;
    private static final String STAR_KEY = "star:%d:%d";
    private static final String STAR_COUNT_KEY = "starCnt:%d:%d";
    private static final String USER_STAR_LIST_KEY = "starList:%d:%d";

    /**
     * 收藏，返回当前收藏数量
     *
     * @param resType 资源类型
     * @param resId   资源ID
     * @param userId  用户ID
     */
    @Override
    public Long star(Integer resType, Integer resId, Integer userId) {
        String key = String.format(STAR_KEY, resType, resId);
        String countKey = String.format(STAR_COUNT_KEY, resType, resId);
        String userKey = String.format(USER_STAR_LIST_KEY, resType, userId);

        stringRedisTemplate.opsForZSet().add(key, String.valueOf(userId), Instant.now().getEpochSecond());
        // 增加点赞数
        Long increment = stringRedisTemplate.opsForValue().increment(countKey);
        // 用户收藏列表添加
        stringRedisTemplate.opsForZSet().add(userKey, String.valueOf(resId), Instant.now().getEpochSecond());

        return 0L;
    }

    /**
     * 取消收藏，返回当前收藏数量
     *
     * @param resType 资源类型
     * @param resId   资源ID
     * @param userId  用户ID
     */
    @Override
    public Long unstar(Integer resType, Integer resId, Integer userId) {
        return 0L;
    }

    /**
     * 用户是否已收藏，当前收藏数
     *
     * @param resType 资源类型
     * @param resId   资源ID
     * @param userId  用户ID
     * @return true-已收藏，false-未收藏
     */
    @Override
    public boolean isStarred(Integer resType, Integer resId, Integer userId) {
        return false;
    }

    /**
     * 获取用户收藏的资源ID列表
     *
     * @param resType 资源类型
     * @param userId  用户ID
     * @return 资源ID列表
     */
    @Override
    public List<Integer> getResIdList(Integer resType, Integer userId) {
        return Collections.emptyList();
    }
}
