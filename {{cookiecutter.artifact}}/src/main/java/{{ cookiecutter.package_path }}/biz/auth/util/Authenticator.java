// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.util;

import com.bastiaanjansen.otp.HMACAlgorithm;
import com.bastiaanjansen.otp.SecretGenerator;
import com.bastiaanjansen.otp.TOTPGenerator;
import {{ cookiecutter.basePackage }}.biz.auth.response.TotpResponse;

import java.net.URI;
import java.net.URISyntaxException;
import java.time.Duration;

/**
 * Authenticator
 */
public final class Authenticator {

    /**
     * 生成二维码
     *
     * @param account 账号
     * @param issuer  服务提供者
     */
    public static TotpResponse generate(String account, String issuer) {
        byte[] secret = SecretGenerator.generate();
        TOTPGenerator generator = build(secret);
        URI url;
        try {
            url = generator.getURI(issuer, account);
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
        return new TotpResponse(url.toString(), account, issuer, new String(secret));
    }

    /**
     * 验证
     *
     * @param secret 密钥
     * @param code   验证码
     */
    public static boolean valid(String secret, String code) {
        TOTPGenerator generator = build(secret.getBytes());
        return generator.verify(code);
    }

    private static TOTPGenerator build(byte[] secret) {
        return new TOTPGenerator.Builder(secret)
                .withHOTPGenerator(builder -> {
                    builder.withPasswordLength(6);
                    builder.withAlgorithm(HMACAlgorithm.SHA256); // SHA256 and SHA512 are also supported
                })
                .withPeriod(Duration.ofSeconds(30))
                .build();
    }

    public static void main(String[] args) throws URISyntaxException {
        TotpResponse response = generate("Jack", "www.taobao.com");
        System.out.println(response);
    }

}
