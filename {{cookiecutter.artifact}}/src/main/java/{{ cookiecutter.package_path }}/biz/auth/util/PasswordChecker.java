// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * 密码复杂度检查工具类
 */
public class PasswordChecker {

    private PasswordChecker() {
    }

    /**
     * 检查密码复杂度
     *
     * @param password 密码
     * @return 0-5 分别代表弱、中、强
     */
    public static int checkPasswordComplexity(String password) {
        int score = 0;

        // Check for uppercase letters
        Pattern upperCase = Pattern.compile("[A-Z]");
        Matcher hasUpperCase = upperCase.matcher(password);
        if (hasUpperCase.find()) {
            score++;
        }

        // Check for lowercase letters
        Pattern lowerCase = Pattern.compile("[a-z]");
        Matcher hasLowerCase = lowerCase.matcher(password);
        if (hasLowerCase.find()) {
            score++;
        }

        // Check for digits
        Pattern digit = Pattern.compile("\\d");
        Matcher hasDigit = digit.matcher(password);
        if (hasDigit.find()) {
            score++;
        }

        // Check for special characters
        Pattern special = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");
        Matcher hasSpecial = special.matcher(password);
        if (hasSpecial.find()) {
            score++;
        }

        // Check for length
        if (password.length() >= 8) {
            score++;
        }

        return score;
    }
}

