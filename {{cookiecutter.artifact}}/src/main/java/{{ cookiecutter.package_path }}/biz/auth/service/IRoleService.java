// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service;

import com.baomidou.mybatisplus.extension.service.IService;
import {{ cookiecutter.basePackage }}.biz.auth.entity.Role;
import {{ cookiecutter.basePackage }}.biz.auth.response.RoleResponse;

import java.util.List;

/**
 * 角色信息 服务类
 */
public interface IRoleService extends IService<Role> {

    /**
     * 删除角色及其关联关系
     *
     * @param roleId 角色ID
     */
    boolean delete(Integer roleId);

    /**
     * 通过ID查询角色
     *
     * @param roleId 角色ID
     */
    Role findById(Integer roleId);

    /**
     * 判断角色是否已经被使用
     *
     * @param roleId 角色ID
     * @return true 已经被使用 false 未被使用
     */
    boolean isAlreadyUsed(Integer roleId);

    /**
     * 查询角色对应权限关系
     *
     * @param role 角色
     * @return 包含权限关系的角色对象
     */
    RoleResponse attachRoleInfo(Role role, boolean full);

    // 更新角色权限关系
    void updateRelation(Integer roleId, List<Integer> permissionIds);

    /**
     * 判断角色名称或者编码是否重复
     *
     * @param name 角色名称
     * @param code 角色编码
     * @return true 重复 false 不重复
     */
    boolean isDuplicate(String name, String code);
}
