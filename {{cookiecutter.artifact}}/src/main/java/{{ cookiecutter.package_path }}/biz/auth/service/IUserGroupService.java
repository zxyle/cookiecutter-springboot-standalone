// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service;

import com.baomidou.mybatisplus.extension.service.IService;
import {{ cookiecutter.basePackage }}.biz.auth.entity.Group;
import {{ cookiecutter.basePackage }}.biz.auth.entity.User;
import {{ cookiecutter.basePackage }}.biz.auth.entity.UserGroup;

import java.util.List;

/**
 * 用户-用户组关联 服务类
 */
public interface IUserGroupService extends IService<UserGroup> {

    /**
     * 删除映射关系
     *
     * @param userId  用户ID
     * @param groupId 用户组ID
     */
    boolean deleteRelation(Long userId, Long groupId);

    /**
     * 查询映射关系
     *
     * @param userId  用户ID
     * @param groupId 用户组ID
     */
    List<UserGroup> queryRelation(Long userId, Long groupId);

    /**
     * 统计映射关系
     *
     * @param userId  用户ID
     * @param groupId 用户组ID
     */
    Integer countRelation(Long userId, Long groupId);

    /**
     * 创建映射关系
     *
     * @param userId  用户ID
     * @param groupId 用户组ID
     */
    boolean createRelation(Long userId, Long groupId);

    /**
     * 更新映射关系
     *
     * @param userId   用户ID
     * @param groupIds 用户组ID列表
     */
    void updateRelation(Long userId, List<Long> groupIds);

    /**
     * 查询用户所属的用户组
     *
     * @param userId 用户ID
     */
    List<Group> findGroupsByUserId(Long userId);

    /**
     * 查询用户组下的用户
     *
     * @param groupId 用户组ID
     */
    List<User> findUsersByGroupId(Long groupId);

}
