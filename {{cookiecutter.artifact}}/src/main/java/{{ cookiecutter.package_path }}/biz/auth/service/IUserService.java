// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service;

import {{ cookiecutter.basePackage }}.biz.auth.entity.User;
import com.baomidou.mybatisplus.extension.service.IService;
import {{ cookiecutter.basePackage }}.biz.auth.response.UserResponse;

import java.util.List;

/**
 * 用户 服务类
 */
public interface IUserService extends IService<User> {

    // 删除用户及其关联角色、用户组、权限
    boolean delete(Long userId);

    // 禁用用户
    boolean disable(Long userId);

    // 启用用户
    boolean enable(Long userId);

    // 下线用户
    boolean kick(Long userId);

    // 通过账号名查询用户
    User queryByAccount(String account);

    // 查询用户拥有的角色、用户组、权限
    UserResponse attachUserInfo(User user, boolean full);

    // 更新用户关联的角色、用户组、权限
    void updateRelation(Long userId, List<Long> roleIds, List<Long> groupIds, List<Long> permissionIds);

    // 创建用户
    User create(String account, String password);

    // 获取所有有管理权限用户组成员
    List<Long> getAllChildren(Long userId);

    // 锁定用户并退出当前登录状态
    boolean locked(Long userId);

    // 解锁用户
    boolean unlock(Long userId);

    // 带缓存的ID查询
    User queryById(Long userId);
}
