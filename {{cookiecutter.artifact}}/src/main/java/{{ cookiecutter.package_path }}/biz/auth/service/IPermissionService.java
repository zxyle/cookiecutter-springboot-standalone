// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service;

import cn.hutool.core.lang.tree.Tree;
import {{ cookiecutter.basePackage }}.biz.auth.entity.Permission;
import com.baomidou.mybatisplus.extension.service.IService;

import java.util.List;

/**
 * 权限信息 服务类
 */
public interface IPermissionService extends IService<Permission> {

    /**
     * 获取用户所有权限名称
     *
     * @param userId 用户ID
     */
    List<Permission> getAllPermissions(Long userId);

    /**
     * 新增权限
     *
     * @param permission 权限信息
     */
    boolean create(Permission permission);

    /**
     * 删除权限
     *
     * @param permissionId 权限ID
     */
    boolean delete(Long permissionId);

    /**
     * 查询用户所有权限码和用户所有角色码
     *
     * @param userId 用户ID
     */
    List<String> getSecurityPermissions(Long userId);

    /**
     * 异步重新将新的权限码和角色码加载到redis中
     *
     * @param userId 用户ID
     */
    void refreshPermissions(Long userId);

    /**
     * 获取持有该权限的用户
     *
     * @param code 权限码
     */
    List<Long> holdPermission(String code);

    /**
     * 获取权限树
     *
     * @param list             待组装权限列表
     * @param rootPermissionId 根节点权限ID
     */
    List<Tree<Integer>> getTree(List<Permission> list, Integer rootPermissionId);

    /**
     * 是否正在被使用
     *
     * @param permissionId 权限ID
     * @return true:正在被使用 false:未被使用
     */
    boolean isAlreadyUsed(Long permissionId);


    /**
     * 递归获取所有子权限
     *
     * @param permissions 完整权限列表
     * @param rootId      根节点ID
     */
    List<Permission> getAllChildren(List<Permission> permissions, Long rootId);
}
