// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import {{ cookiecutter.basePackage }}.biz.auth.entity.Answer;
import {{ cookiecutter.basePackage }}.biz.auth.mapper.AnswerMapper;
import {{ cookiecutter.basePackage }}.biz.auth.service.IAnswerService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

/**
 * 安全问题答案 服务实现类
 */
@Slf4j
@Service
public class AnswerServiceImpl extends ServiceImpl<AnswerMapper, Answer> implements IAnswerService {

    /**
     * 查询是否已经被使用
     *
     * @param questionId 问题ID
     * @return 是否已经被使用 true:已经被使用 false:未被使用
     */
    @Override
    public boolean isAlreadyUsed(Long questionId) {
        QueryWrapper<Answer> wrapper = new QueryWrapper<>();
        wrapper.eq("question_id", questionId);
        int count = count(wrapper);
        return count > 0;
    }

    /**
     * 查询用户的安全问题答案
     *
     * @param userId     用户ID
     * @param questionId 问题ID
     * @return 安全问题答案
     */
    @Override
    public Answer queryByUserId(Long userId, Long questionId) {
        QueryWrapper<Answer> wrapper = new QueryWrapper<>();
        wrapper.eq("user_id", userId);
        wrapper.eq("question_id", questionId);
        return getOne(wrapper);
    }
}
