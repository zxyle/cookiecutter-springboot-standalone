// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.service.impl;

import {{ cookiecutter.basePackage }}.biz.auth.entity.User;
import {{ cookiecutter.basePackage }}.biz.auth.enums.ChangePasswordEnum;
import {{ cookiecutter.basePackage }}.biz.auth.security.PasswordProperties;
import {{ cookiecutter.basePackage }}.biz.auth.service.IPasswordHistoryService;
import {{ cookiecutter.basePackage }}.biz.auth.service.IPasswordService;
import {{ cookiecutter.basePackage }}.biz.auth.service.IUserService;
import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class PasswordServiceImpl implements IPasswordService {

    IUserService userService;

    PasswordProperties passwordProperties;

    IPasswordHistoryService passwordHistoryService;

    public PasswordServiceImpl(IUserService userService, PasswordProperties passwordProperties, IPasswordHistoryService passwordHistoryService) {
        this.userService = userService;
        this.passwordProperties = passwordProperties;
        this.passwordHistoryService = passwordHistoryService;
    }

    /**
     * 修改密码
     *
     * @param userId 用户ID
     * @param newPwd 加密后的新密码
     * @param policy 密码修改策略
     */
    @Override
    public boolean change(Long userId, String newPwd, ChangePasswordEnum policy) {
        User user = userService.getById(userId);

        UpdateWrapper<User> updateWrapper = new UpdateWrapper<>();
        updateWrapper.set("pwd", newPwd);
        updateWrapper.set("pwd_change_time", LocalDateTime.now());
        updateWrapper.eq("id", userId);

        boolean success = userService.update(updateWrapper);
        if (success && passwordProperties.isEnableHistory()) {
            // 记录密码修改日志
            passwordHistoryService.recordPasswordHistory(user, newPwd, policy);
        }
        return success;
    }
}
