// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.controller;

import {{ cookiecutter.basePackage }}.common.response.ApiResponse;
import {{ cookiecutter.basePackage }}.biz.auth.aspect.LogOperation;
import {{ cookiecutter.basePackage }}.biz.auth.entity.User;
import {{ cookiecutter.basePackage }}.biz.auth.request.login.LoginRequest;
import {{ cookiecutter.basePackage }}.biz.auth.response.LoginResponse;
import {{ cookiecutter.basePackage }}.biz.auth.service.CodeService;
import {{ cookiecutter.basePackage }}.biz.auth.service.IProfileService;
import {{ cookiecutter.basePackage }}.biz.auth.service.IUserService;
import {{ cookiecutter.basePackage }}.biz.auth.service.LoginService;
import {{ cookiecutter.basePackage }}.biz.auth.util.JwtUtil;
import {{ cookiecutter.basePackage }}.common.controller.AuthBaseController;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import java.time.LocalDateTime;

/**
 * 登录管理
 */
@RestController
@RequestMapping("/auth/user")
@RequiredArgsConstructor(onConstructor_ = {@Autowired})
public class LoginController extends AuthBaseController {

    final IUserService userService;

    final LoginService loginService;

    final CodeService codeService;

    final IProfileService profileService;


    /**
     * 用户登录
     *
     * @param request 用户信息
     * @apiNote 通过用户名/邮箱/手机号和密码进行用户登录
     */
    @PostMapping("/login")
    public ApiResponse<LoginResponse> login(@Valid @RequestBody LoginRequest request, HttpServletRequest servletRequest) {
        ApiResponse<LoginResponse> beforeLoginResponse = beforeLogin(request);
        if (beforeLoginResponse != null) {
            return beforeLoginResponse;
        }

        User user = loginService.login(request.getAccount(), request.getPassword());
        Long userId = user.getId();
        LoginResponse response = new LoginResponse();
        response.setToken(JwtUtil.createJWT(userId.toString()));
        response.setUsername(user.getUsername());
        response.setAdmin(isSuper());
        response.setProfile(profileService.queryByUserId(userId));

        // 用户初次登录后，需要在24小时内修改密码，否则到期后无法登录
        if (user.getMustChangePwd() == 1) {
            response.setMustChangePwd(true);
            userService.markExpired(userId, LocalDateTime.now().plusHours(24));
        }
        return new ApiResponse<>(response);
    }

    /**
     * 退出登录
     */
    @LogOperation("退出登录")
    @PreAuthorize("@ck.hasPermit('auth:user:logout')")
    @PostMapping("/logout")
    public ApiResponse<Object> logout() {
        boolean success = loginService.logout(getUserId());
        return new ApiResponse<>(success);
    }

    /**
     * 登录前条件判断
     */
    public ApiResponse<LoginResponse> beforeLogin(LoginRequest request) {
        // 验证码校验
        boolean verify = codeService.verify(request.getCode(), request.getCaptchaId());
        if (!verify) {
            return new ApiResponse<>("验证码可能错误或过期", false);
        }
        return null;
    }

}
