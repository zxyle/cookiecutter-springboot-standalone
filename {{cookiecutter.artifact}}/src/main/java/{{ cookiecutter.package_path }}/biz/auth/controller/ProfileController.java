// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.controller;

import {{ cookiecutter.basePackage }}.biz.auth.entity.Profile;
import {{ cookiecutter.basePackage }}.biz.auth.service.IProfileService;
import {{ cookiecutter.basePackage }}.common.controller.AuthBaseController;
import {{ cookiecutter.basePackage }}.common.response.ApiResponse;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

/**
 * 用户信息管理
 */
@RestController
@RequestMapping("/auth")
public class ProfileController extends AuthBaseController {

    IProfileService thisService;

    public ProfileController(IProfileService thisService) {
        this.thisService = thisService;
    }


    /**
     * 获取当前用户信息
     */
    @PreAuthorize("@ck.hasPermit('auth:profile:get')")
    @GetMapping("/profile")
    public ApiResponse<Profile> get() {
        Long userId = getUserId();
        return new ApiResponse<>(thisService.queryByUserId(userId));
    }

    /**
     * 更新当前用户信息
     */
    @PreAuthorize("@ck.hasPermit('auth:profile:update')")
    @PutMapping("/profile")
    public ApiResponse<Profile> update(@Valid @RequestBody Profile entity) {
        Long userId = getUserId();
        entity.setUserId(userId);
        Profile profile = thisService.updateProfile(entity);
        return new ApiResponse<>(profile);
    }
}
