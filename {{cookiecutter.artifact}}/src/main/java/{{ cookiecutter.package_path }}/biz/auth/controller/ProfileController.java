// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.auth.controller;

import {{ cookiecutter.basePackage }}.biz.auth.entity.User;
import {{ cookiecutter.basePackage }}.biz.auth.request.user.BindingRequest;
import {{ cookiecutter.basePackage }}.biz.auth.service.IUserService;
import {{ cookiecutter.basePackage }}.common.controller.AuthBaseController;
import {{ cookiecutter.basePackage }}.common.response.ApiResponse;
import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * 个人信息管理
 */
@RestController
@RequestMapping("/auth/profile")
public class ProfileController extends AuthBaseController {

    @Autowired
    IUserService userService;

    @Resource
    StringRedisTemplate stringRedisTemplate;

    /**
     * 绑定手机号或邮箱号
     */
    @PostMapping("/binding")
    public ApiResponse<Boolean> binding(@Valid @RequestBody BindingRequest request) {
        boolean success = false;
        // 获取当前登陆账号
        User user = getLoggedInUser();

        // 获取redis中验证码
        String key = "code:" + request.getPrincipal();
        String code = stringRedisTemplate.opsForValue().get(key);
        // 校验是否正确
        if (code != null && code.equalsIgnoreCase(request.getCode())) {
            UpdateWrapper<User> wrapper = new UpdateWrapper<>();
            wrapper.set(StringUtils.isNotBlank(request.getMobile()), "mobile", request.getMobile());
            wrapper.set(StringUtils.isNotBlank(request.getEmail()), "email", request.getEmail());
            wrapper.eq("id", user.getId());
            success = userService.update(wrapper);
        }

        // 删除key
        Boolean delete = stringRedisTemplate.delete(key);
        return new ApiResponse<>(success && Boolean.TRUE.equals(delete));
    }
}
