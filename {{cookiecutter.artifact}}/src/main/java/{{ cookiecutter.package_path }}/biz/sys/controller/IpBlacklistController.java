// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import {{ cookiecutter.basePackage }}.biz.sys.entity.Blacklist;
import {{ cookiecutter.basePackage }}.biz.sys.service.IIpBlacklistService;
import {{ cookiecutter.basePackage }}.common.response.ApiResponse;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
 * IP黑名单管理
 */
@RestController
@RequestMapping("/sys")
public class IpBlacklistController {

    IIpBlacklistService thisService;

    public IpBlacklistController(IIpBlacklistService thisService) {
        this.thisService = thisService;
    }

    /**
     * 黑名单列表分页查询
     */
    @PreAuthorize("@ck.hasPermit('sys:blacklist:list')")
    @GetMapping("/blacklists")
    public ApiResponse<List<Blacklist>> list() {
        QueryWrapper<Blacklist> wrapper = new QueryWrapper<>();
        List<Blacklist> items = thisService.list(wrapper);
        return new ApiResponse<>(items);
    }

    /**
     * 新增黑名单
     */
    @PreAuthorize("@ck.hasPermit('sys:blacklist:add')")
    @PostMapping("/blacklists")
    public ApiResponse<Blacklist> add(@Valid @RequestBody Blacklist entity) {
        boolean success = thisService.save(entity);
        if (success) {
            return new ApiResponse<>(entity);
        }
        return new ApiResponse<>("新增失败", false);
    }

    /**
     * 按ID删除黑名单
     */
    @PreAuthorize("@ck.hasPermit('sys:blacklist:delete')")
    @DeleteMapping("/blacklists/{id}")
    public ApiResponse<Object> delete(@PathVariable Long id) {
        boolean success = thisService.removeById(id);
        if (success) {
            return new ApiResponse<>("删除成功");
        }
        return new ApiResponse<>("删除失败", false);
    }

}
