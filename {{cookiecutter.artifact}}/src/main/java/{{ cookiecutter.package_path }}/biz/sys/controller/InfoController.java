// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import {{ cookiecutter.basePackage }}.biz.sys.entity.Info;
import {{ cookiecutter.basePackage }}.biz.sys.service.IInfoService;
import {{ cookiecutter.basePackage }}.common.response.R;
import lombok.RequiredArgsConstructor;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 系统信息管理
 */
@RestController
@RequestMapping("/sys")
@RequiredArgsConstructor
@CacheConfig(cacheNames = "InfoCache")
public class InfoController {

    final IInfoService thisService;

    /**
     * 获取系统信息列表
     */
    @Cacheable(unless = "#result == null || #result.size() == 0")
    @GetMapping("/infos")
    public R<Map<String, String>> list() {
        QueryWrapper<Info> wrapper = new QueryWrapper<>();
        wrapper.select("param_key", "param_value");
        List<Info> params = thisService.list(wrapper);
        Map<String, String> map = new HashMap<>(params.size());
        params.forEach(info -> map.put(info.getParamKey(), info.getParamValue()));
        return R.ok(map);
    }

    /**
     * 新增系统信息
     */
    @PreAuthorize("@ck.hasPermit('sys:info:add')")
    @PostMapping("/infos")
    public R<Info> add(@Valid @RequestBody Info entity) {
        boolean success = thisService.save(entity);
        return success ? R.ok(entity) : R.fail("新增系统信息失败");
    }

    /**
     * 按ID更新系统信息
     */
    @PreAuthorize("@ck.hasPermit('sys:info:update')")
    @PutMapping("/infos/{id}")
    public R<Void> update(@PathVariable Long id, @Valid @RequestBody Info entity) {
        entity.setId(id);
        boolean success = thisService.updateById(entity);
        return success ? R.ok("更新系统信息成功") : R.fail("更新系统信息失败");
    }


    /**
     * 按ID删除系统信息
     */
    @PreAuthorize("@ck.hasPermit('sys:info:delete')")
    @DeleteMapping("/infos/{id}")
    public R<Void> delete(@PathVariable Long id) {
        boolean success = thisService.removeById(id);
        return success ? R.ok("删除系统信息成功") : R.fail("删除系统信息失败");
    }

}
