// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import {{ cookiecutter.basePackage }}.biz.sys.entity.Release;
import {{ cookiecutter.basePackage }}.biz.sys.service.IReleaseService;
import {{ cookiecutter.basePackage }}.common.response.R;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
 * 发布版本管理
 */
@RestController
@RequestMapping("/sys")
public class ReleaseController {

    IReleaseService thisService;

    public ReleaseController(IReleaseService thisService) {
        this.thisService = thisService;
    }

    /**
     * 获取版本列表
     */
    @PreAuthorize("@ck.hasPermit('sys:release:list')")
    @GetMapping("/releases")
    public R<List<Release>> list() {
        QueryWrapper<Release> wrapper = new QueryWrapper<>();
        wrapper.select("version", "description");
        wrapper.orderByDesc("create_time");
        List<Release> releases = thisService.list(wrapper);
        return R.ok(releases);
    }

    /**
     * 新增发布版本
     */
    @PreAuthorize("@ck.hasPermit('sys:release:add')")
    @PostMapping("/releases")
    public R<Release> add(@Valid @RequestBody Release entity) {
        boolean success = thisService.save(entity);
        return success ? R.ok(entity) : R.fail("新增失败");
    }


    /**
     * 按ID查询发布版本
     */
    @PreAuthorize("@ck.hasPermit('sys:release:get')")
    @GetMapping("/releases/{id}")
    public R<Release> get(@PathVariable Long id) {
        Release entity = thisService.getById(id);
        return entity == null ? R.fail("数据不存在") : R.ok(entity);
    }

    /**
     * 按ID更新发布版本
     */
    @PreAuthorize("@ck.hasPermit('sys:release:update')")
    @PutMapping("/releases/{id}")
    public R<Object> update(@Valid @RequestBody Release entity, @PathVariable Long id) {
        entity.setId(id);
        boolean success = thisService.updateById(entity);
        return success ? R.ok("更新成功") : R.fail("更新失败");
    }

    /**
     * 按ID删除发布版本
     */
    @PreAuthorize("@ck.hasPermit('sys:release:delete')")
    @DeleteMapping("/releases/{id}")
    public R<Object> delete(@PathVariable Long id) {
        boolean success = thisService.removeById(id);
        return success ? R.ok("删除成功") : R.fail("删除失败");
    }

}
