// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import {{ cookiecutter.basePackage }}.biz.sys.entity.Blacklist;
import {{ cookiecutter.basePackage }}.biz.sys.mapper.BlacklistMapper;
import {{ cookiecutter.basePackage }}.biz.sys.service.IBlacklistService;
import org.apache.commons.collections4.CollectionUtils;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/**
 * IP黑名单 服务实现类
 */
@Service
public class BlacklistServiceImpl extends ServiceImpl<BlacklistMapper, Blacklist> implements IBlacklistService {

    /**
     * 获取有效期内黑名单列表
     */
    @Override
    public List<String> getBlacklist() {
        QueryWrapper<Blacklist> wrapper = new QueryWrapper<>();
        wrapper.select("ip");
        wrapper.isNull("end_time").or().ge("end_time", System.currentTimeMillis());
        List<Blacklist> list = list(wrapper);
        if (CollectionUtils.isNotEmpty(list)) {
            return list.stream().map(Blacklist::getIp).collect(Collectors.toList());
        }
        return new ArrayList<>();
    }

}
