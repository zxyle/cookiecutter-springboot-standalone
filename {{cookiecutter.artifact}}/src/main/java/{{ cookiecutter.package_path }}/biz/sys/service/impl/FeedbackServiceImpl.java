// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import {{ cookiecutter.basePackage }}.biz.sys.entity.Feedback;
import {{ cookiecutter.basePackage }}.biz.sys.mapper.FeedbackMapper;
import {{ cookiecutter.basePackage }}.biz.sys.service.IFeedbackService;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.CachePut;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

/**
 * 意见反馈 服务实现类
 */
@Slf4j
@Service
public class FeedbackServiceImpl extends ServiceImpl<FeedbackMapper, Feedback> implements IFeedbackService {

    /**
     * 按ID查询（带缓存）
     */
    @Cacheable(cacheNames = "FeedbackCache", key = "#id", unless = "#result == null")
    @Override
    public Feedback findById(Integer id) {
        return getById(id);
    }

    /**
     * 按ID更新（带缓存）
     */
    @CachePut(cacheNames = "FeedbackCache", key = "#feedback.id")
    @Override
    public Feedback putById(Feedback feedback) {
        updateById(feedback);
        return getById(feedback.getId());
    }

    /**
     * 按ID删除（带缓存）
     */
    @CacheEvict(cacheNames = "FeedbackCache", key = "#id")
    @Override
    public void deleteById(Integer id) {
        removeById(id);
    }

    /**
     * 分页查询（带缓存）
     */
    @Override
    public IPage<Feedback> pageQuery(IPage<Feedback> p, QueryWrapper<Feedback> wrapper) {
        return page(p, wrapper);
    }

}
