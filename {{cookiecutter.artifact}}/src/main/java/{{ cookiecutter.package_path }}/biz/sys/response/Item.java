// This project was generated by {{ cookiecutter.author_name }} at {% now 'local', '%Y-%m-%d %X' %}.
// The version of generator is v{{ cookiecutter._version }}.

package {{ cookiecutter.basePackage }}.biz.sys.response;

import {{ cookiecutter.basePackage }}.biz.sys.entity.Setting;
import lombok.Data;

/**
 * 将设置项转换为Java数据类型
 */
@Data
public class Item {

    private long longValue;

    private String str;

    private int intValue;

    /**
     * 布尔值
     */
    private boolean real;


    public Item(Setting setting) {
        switch (setting.getDataType()) {
            case "long":
            case "Long":
            case "java.lang.Long":
            case "bigint":
                this.longValue = Long.parseLong(setting.getOptionValue());
                break;
            case "str":
            case "string":
            case "String":
            case "java.lang.String":
            case "varchar":
            case "char":
                this.str = setting.getOptionValue();
                break;
            case "int":
            case "Integer":
            case "java.lang.Integer":
            case "tinyint":
            case "smallint":
            case "mediumint":
                this.intValue = Integer.parseInt(setting.getOptionValue());
                break;
            case "boolean":
            case "bool":
            case "Boolean":
            case "java.lang.Boolean":
                this.real = Boolean.parseBoolean(setting.getOptionValue());
                break;
            default:
                throw new IllegalArgumentException("不支持的数据类型：" + setting.getDataType());
        }
    }
}
